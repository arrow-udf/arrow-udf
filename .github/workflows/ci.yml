name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - name: Check code format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-wasip1
      - name: Build WASM
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release -p arrow-udf-example --target wasm32-wasip1
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets --all-features
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          # Skip test_no_gil because there is only 1 core in the CI
          args: --all-features --no-fail-fast --workspace --exclude arrow-udf-flight -- --skip test_no_gil
      - name: Test Bench
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --bench bench

  test-flight:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Test Python UDF Server
        run: |
          pip install pyarrow pytest
          pytest arrow-udf-flight/python/arrow_udf/test_udf.py
      - name: Test Java UDF Server
        run: |
          cd arrow-udf-flight/java
          mvn test
          cd ../..
      - name: Build flight test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p arrow-udf-flight --no-run
      - name: Test flight with Python UDF Server
        run: |
          python arrow-udf-flight/python/example.py &
          pid=$!
          sleep 1
          cargo test -p arrow-udf-flight
          kill $pid
      - name: Test flight with Java UDF Server
        run: |
          cd arrow-udf-flight/java
          _JAVA_OPTIONS="--add-opens=java.base/java.nio=ALL-UNNAMED" mvn exec:java &
          pid=$!
          sleep 10
          cargo test -p arrow-udf-flight
          kill $pid
          cd ../..

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          # all crates are built using the nightly toolchain on docs.rs
          toolchain: nightly
          override: true
      - uses: actions/setup-python@v5
        with:
          # docs.rs uses Python 3.10
          python-version: '3.10'
      - name: Build docs
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: "--cfg docsrs"
          DOCS_RS: 1
        with:
          command: doc
          args: --no-deps --workspace
